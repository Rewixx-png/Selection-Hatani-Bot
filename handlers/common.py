import logging
import time
from aiogram import F, Router, types
from aiogram.filters import CommandStart, Command
from aiogram.utils.markdown import html_decoration as hd

import config
import db
from utils import format_user_link

router = Router()

@router.message(CommandStart(), F.chat.type == "private")
async def cmd_start_private(message: types.Message):
    user_id = message.from_user.id
    log_prefix = f"StartPM/{user_id}"
    logging.info(f"[{log_prefix}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª /start –≤ –õ–°.")

    await db.mark_user_started_pm(user_id)

    reply_text = (f"–û—Ç–ª–∏—á–Ω–æ! ‚úÖ –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π.\n\n"
                  f"–¢–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —á–∞—Ç –æ—Ç–±–æ—Ä–∞ HataniSquad ({config.SELECTION_CHAT_URL}) "
                  f"–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É {hd.bold('¬´‚úÖ –Ø —É–∂–µ –Ω–∞–ø–∏—Å–∞–ª /start –≤ –õ–°¬ª')} "
                  f"–ø–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")

    await message.reply(reply_text, disable_web_page_preview=True, parse_mode="HTML")
    logging.info(f"[{log_prefix}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –õ–°, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ —á–∞—Ç.")


@router.message(F.chat.type == "private", F.content_type.in_({types.ContentType.TEXT}))
async def handle_private_message(message: types.Message):
    if not message.text.startswith('/'):
        await message.reply(config.MSG_PRIVATE_CHAT_REDIRECT, disable_web_page_preview=True)
        logging.info(f"Replied to private text message from user {message.from_user.id}")

@router.message(Command("hping"))
async def cmd_hping(message: types.Message):
    start_time = time.monotonic()
    sent_message = await message.reply("üèì –ü–æ–Ω–≥...")
    end_time = time.monotonic()
    latency = (end_time - start_time) * 1000
    await sent_message.edit_text(
        f"TPEBOP PIDOPACIK :3 ({int(latency)}ms)"
    )