# keyboards.py
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import config # –ò—Å–ø–æ–ª—å–∑—É–µ–º config.py

async def get_main_menu_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    from db import get_user_selection_status # –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ

    builder = InlineKeyboardBuilder()
    status = await get_user_selection_status(user_id)

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–±–æ—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 'passed' –∏ –Ω–µ 'failed'
    if status not in ['passed', 'failed']:
        builder.button(text="üéØ –ù–∞—á–∞—Ç—å –æ—Ç–±–æ—Ä –≤ HataniSquad", callback_data="selection:start")

    builder.button(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞—Ç–µ–ª—è", url=config.CREATOR_PROFILE_URL)
    builder.button(text="üé• TikTok —Å–æ–∑–¥–∞—Ç–µ–ª—è", url=config.CREATOR_TIKTOK_URL)
    
    builder.adjust(1)
    return builder.as_markup()

def get_agreement_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üìú –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", url=config.AGREEMENT_URL)
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"selection:confirm_agreement:{user_id}")
    builder.adjust(1)
    return builder.as_markup()

def get_rules_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üìú –ü—Ä–∞–≤–∏–ª–∞ HataniSquad", url=config.RULES_URL)
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"selection:confirm_rules:{user_id}")
    builder.adjust(1)
    return builder.as_markup()

def get_unmute_start_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞: –ø–µ—Ä–µ–π—Ç–∏ –≤ –õ–° –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å—Ç–∞—Ä—Ç."""
    builder = InlineKeyboardBuilder()
    bot_pm_url = f"https://t.me/{config.BOT_USERNAME}?start=verify"
    builder.button(text="ü§ñ –ü–µ—Ä–µ–π—Ç–∏ –≤ –õ–° –∫ –±–æ—Ç—É", url=bot_pm_url)
    builder.button(text="‚úÖ –Ø —É–∂–µ –Ω–∞–ø–∏—Å–∞–ª /start –≤ –õ–°", callback_data=f"selection:start_verification:{user_id}")
    builder.adjust(1)
    return builder.as_markup()

def get_profile_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è TikTok."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞, —ç—Ç–æ –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="selection:confirm_profile_yes")
    builder.button(text="‚ùå –ù–µ—Ç, –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É", callback_data="selection:confirm_profile_no")
    builder.adjust(1)
    return builder.as_markup()

def get_approve_reject_keyboard(applicant_id: int, tiktok_link: str, tiktok_username: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (–ø–µ—Ä–≤–∏—á–Ω–∞—è)."""
    builder = InlineKeyboardBuilder()
    builder.button(text=f"üë§ –¢–¢: {tiktok_username}", url=tiktok_link)
    builder.button(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"admin:approve:{applicant_id}")
    builder.button(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"admin:reject:{applicant_id}")
    builder.adjust(1, 2)
    return builder.as_markup()

def get_rejection_reason_keyboard(applicant_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º."""
    builder = InlineKeyboardBuilder()
    for code, text in config.REJECTION_REASONS.items():
        builder.button(text=text, callback_data=f"admin:reject_reason:{applicant_id}:{code}")
    builder.adjust(1)
    return builder.as_markup()

def get_unmute_admin_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —á—Ç–æ–±—ã —Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üîì –†–∞–∑–º—É—Ç–∏—Ç—å", callback_data=f"admin:unmute:{user_id}")
    return builder.as_markup()

def get_admin_profanity_trakh_keyboard(message_id: int, word: str) -> InlineKeyboardMarkup:
     """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è '—Ç—Ä–∞—Ö–Ω—É—Ç—å' –∞–¥–º–∏–Ω–∞ –∑–∞ –º–∞—Ç."""
     builder = InlineKeyboardBuilder()
     builder.button(text="–¢—Ä–∞—Ö–Ω—É—Ç—å üòâ", callback_data=f"admin:profanity_trakh:{message_id}:{word}")
     return builder.as_markup()

def get_unban_admin_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —á—Ç–æ–±—ã —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üîì –°–Ω—è—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É", callback_data=f"admin:unban:{user_id}")
    return builder.as_markup()